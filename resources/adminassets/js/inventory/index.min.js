$(document).ready(function() {

    var dt_filter_table = $('.dt-column-search');

    if (dt_filter_table.length) {

        var dt_basic = dt_filter_table.DataTable({
            processing: true,
            serverSide: true,
            ajax: getListingUrl,
            retrieve: true,
            aaSorting: [],
            columns: [
                // {
                //     data: 'id'
                // }, // used for sorting so will hide this column
                {
                    data: 'title',
                    name: 'product.title'
                },
                {
                    data: 'sku',
                    name: 'product.sku'
                },
                {
                    data: 'is_continue_selling',
                    name: 'product.is_continue_selling'
                },
                {
                    data: 'incoming',
                    name: 'incoming'
                },
                {
                    data: 'available_quantity',
                    name: 'available_quantity'
                },
                {
                    data: 'address_id',
                    name: 'address_id'
                },
                {
                    data: '',
                    name: displayglobalActions
                }
            ],
            columnDefs: [
                {
                    targets: 0,
                    responsivePriority: 0,
                    orderable: true,
                    render: function (data, type, full, meta) {
                        var title = full['title'];
                       
                        // Creates full output for row
                        var $row_output ='<a href="'+ productUrl + '/' + full.product_id + '/edit' + '" class="item-edit" data-id="'+full.id+'" >' +
                          '<div class="d-flex justify-content-left align-items-center">' +
                              '<div class="d-flex flex-column">' + '<span class="emp_name text-truncate font-weight-bold">' + title + '</span>' + '</div>' +
                          '</div></a>';

                        return $row_output;
                      }
                },
                {
                    targets: 1,
                    responsivePriority: 1,
                    orderable: true,
                },
                {
                    targets: 2,
                    responsivePriority: 2,
                    orderable: true,
                },
                {
                    targets: 3,
                    responsivePriority: 3,
                    orderable: true,
                },
                {
                    targets: 4,
                    responsivePriority: 4,
                    orderable: true,
                }, 
                {
                    targets: 5,
                    responsivePriority: 5,
                    orderable: false,
                    visible:false
                }, 
                {
                    // Actions
                    targets: -1,
                    title: 'Manage Inventory',
                    orderable: false,
                    searchable: false,
                    render: function(data, type, full, meta) {
                        return (
                            '<div class="input-group">' +
                                '<input type="NUMBER" class="form-control input-qty" placeholder="0" aria-label="Quantity" id="qty-input-'+full.id +'" data-id="'+full.id+'">' +
                                '<div class="input-group-append">' +
                                  '<button class="btn btn-primary waves-effect btn-save-qty" type="button" id="qty-update-'+ full.id +'" data-id="'+full.id+'" disabled>SAVE!</button>' +
                                '</div>' +
                            '</div>'
                        );
                    }
                }
            ],
            order: [[1, 'dese']],
            orderCellsTop: true,
            dom: '<"card-header border-bottom p-1"<"head-label"><"dt-action-buttons text-right"B>><"d-flex justify-content-between align-items-center mx-0 row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6"f>>t<"d-flex justify-content-between mx-0 row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
            orderCellsTop: true,
            displayLength: 10,
            lengthMenu: [10, 25, 50, 75, 100, 500, 1000],
            buttons: [
                {
                    extend: 'collection',
                    className: 'btn btn-outline-secondary  dropdown-toggle mr-2',
                    attr:{
                        'id':'btn_inventory_export'
                    },
                    text: feather.icons['share'].toSvg({
                        class: 'font-small-4 mr-50'
                    }) + 'Export',
                    buttons: [{
                            extend: 'print',
                            text: feather.icons['printer'].toSvg({
                                class: 'font-small-4 mr-50'
                            }) + 'Print',
                            className: 'dropdown-item',
                            exportOptions: {
                                columns: [0, 1 , 2, 3, 4]
                            }
                        },
                        {
                            extend: 'csv',
                            text: feather.icons['file-text'].toSvg({
                                class: 'font-small-4 mr-50'
                            }) + 'Csv',
                            className: 'dropdown-item',
                            exportOptions: {
                                columns: [0, 1 , 2, 3, 4]
                            }
                        },
                        {
                            extend: 'excel',
                            text: feather.icons['file'].toSvg({
                                class: 'font-small-4 mr-50'
                            }) + 'Excel',
                            className: 'dropdown-item',
                            exportOptions: {
                                columns: [0, 1 , 2, 3, 4]
                            }
                        },
                        {
                            extend: 'pdf',
                            text: feather.icons['clipboard'].toSvg({
                                class: 'font-small-4 mr-50'
                            }) + 'Pdf',
                            className: 'dropdown-item',
                            exportOptions: {
                                columns: [0, 1 , 2, 3, 4]
                            }
                        },
                        {
                            extend: 'copy',
                            text: feather.icons['copy'].toSvg({
                                class: 'font-small-4 mr-50'
                            }) + 'Copy',
                            className: 'dropdown-item',
                            exportOptions: {
                                columns: [0, 1 , 2, 3, 4]
                            }
                        }
                    ],
                    init: function(api, node, config) {
                        $(node).removeClass('btn-secondary');
                        $(node).parent().removeClass('btn-group');
                        setTimeout(function() {
                            $(node).closest('.dt-buttons').removeClass('btn-group').addClass('d-inline-flex');
                        }, 50);
                    }
                }
            ],
            language: {
                paginate: {
                    // remove previous & next text from pagination
                    previous: '&nbsp;',
                    next: '&nbsp;'
                }
            },
            initComplete: function(){
                 if($('#inventoryStock_export').length != 1)
                {
                    $('#btn_inventory_export').remove();
                }

                $("#DataTables_Table_0 tbody").after('<tfoot></tfoot>');
                $("#DataTables_Table_0 thead tr:first").clone().appendTo($("#column-search-datatable tfoot"));
            }
        });

        $('div.head-label').html('<h6 class="mb-0">Inventory</h6>');

        $('.dataTable thead').on('input select', '.search', function () {
              let strict = $(this).attr('strict') || false
              let value = strict && this.value ? "^" + this.value + "$" : this.value
              dt_basic
                .column($(this).parent().index())
                .search(value, strict)
                .draw()
        });

        $('.dt-action-buttons .dt-buttons').append($('#locations').html());
        $('#locations').html('');
        $(".location-name").text($('.location-radio').data('value'));
        filterColumn($('.location-radio').attr('data-column'), $('.location-radio').val());

        $(document).on('change', '.location-radio', function () {
            filterColumn($(this).attr('data-column'), $(this).val());
        });
    }

     // Filter column wise function
    function filterColumn(i, val) {
       dt_basic.column(i).search(val, false).draw();
    }

    $(document).on('change', '.location-radio', function(){
        $(".location-name").text($(this).data('value'));
    });

    $(document).on('keyup', '.input-qty', function(){
        var id = $(this).data('id'),
        qty = $(this).val();

        if(qty <= 0){
            $('#qty-update-'+ id).prop('disabled', true)
        } else {
            $('#qty-update-'+ id).prop('disabled', false)
        }
    })

    $(document).on('click', '.btn-save-qty', function(){
        var id = $(this).data('id'),
        qty = $('#qty-input-'+ id).val();

        let section = $('#qty-update-'+ id);
        blockSection(section);
        var formData = {
            "_method": 'POST',
            id:id,
            qty:qty
        };
        var type = "POST";
        var ajaxurl = getListingUrl + '/manage/inventory';
        $.ajax({
            type: type,
            url: ajaxurl,
            data: formData,
            dataType: 'json',
            success: function(data) {
                closeLoader();
                let res = data.response;
                if(res.status_code == 1002){
                    successModal(res.message);
                    dt_basic.ajax.reload( null, false );
                    $('#qty-update-'+ id).prop('disabled', true)
                }
                unblockSection(section);
            },
            error: function(data) {
                unblockSection(section);
                errorModal('Something went wrong!')
            }
        });
    })
    
});