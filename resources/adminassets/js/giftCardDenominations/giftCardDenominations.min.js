$(document).ready(function() {
    var dt_filter_table = $('.dt-column-search');

    if (dt_filter_table.length) {

        var dt_filter_table = dt_filter_table.DataTable({
            processing: true,
            serverSide: true,
            ajax: getListingUrl,
            columns: [{
                    data: 'id'
                }, // used for sorting so will hide this column
                {
                    data: 'id'
                }, // used for sorting so will hide this column
                {
                    data: 'product_title',
                    name: 'product.title'
                },
                {
                    data: 'value',
                    name: 'value'
                },
                {
                    data: '',
                    name: displayglobalActions
                }
            ],
            columnDefs: [
                {
                  // For Checkboxes
                  targets: 0,
                  orderable: false,
                  responsivePriority: 1,
                  searchable: false,
                  render: function (data, type, full, meta) {
                    return (
                      '<div class="custom-control custom-checkbox"> <input class="custom-control-input dt-checkboxes" type="checkbox" value="'+ full.id +'" id="checkbox' +
                      data +
                      '" /><label class="custom-control-label" for="checkbox' +
                      data +
                      '"></label></div>'
                    );
                  },
                  checkboxes: {
                    selectAllRender:
                      '<div class="custom-control custom-checkbox"> <input class="custom-control-input" type="checkbox" value="" id="checkboxSelectAll" /><label class="custom-control-label" for="checkboxSelectAll"></label></div>'
                  }
                },
                {
                    targets: 1,
                    responsivePriority: 2,
                },
                {
                    targets: 2,
                    responsivePriority: 3,
                },
                {
                    targets: 3,
                    responsivePriority: 4,
                },
                {
                    // Actions
                    targets: -1,
                    title: 'Actions',
                    orderable: false,
                    searchable: false,
                    render: function(data, type, full, meta) {
                        return (
                            
                             '<a href="'+displayUrl+ '/' + full.id+'" class="btn-view view_btn" data-id="'+full.id+'" >' +
                            feather.icons['book-open'].toSvg({
                                class: 'font-small-4 mr-50'
                            }) +
                            '</a>'+
                            '<a href="javascript:;" class="delete-record delete_btn" data-id="'+full.id+'">' +
                            feather.icons['trash-2'].toSvg({
                                class: 'font-small-4 mr-50'
                            }) +
                            '</a>' +
                            '<a href="'+ getListingUrl + '/' + full.id + '/edit' + '" class="item-edit edit_btn" data-id="'+full.id+'" >' +
                            feather.icons['edit'].toSvg({
                                class: 'font-small-4'
                            }) +
                            '</a>'
                        );
                    }
                }
            ],
            order: [
               [1, 'dese']
            ],
            dom: '<"card-header border-bottom p-1"<"head-label"><"dt-action-buttons text-right"B>><"d-flex justify-content-between align-items-center mx-0 row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6"f>>t<"d-flex justify-content-between mx-0 row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
            orderCellsTop: true,
            displayLength: 10,
            lengthMenu: [10, 25, 50, 75, 100,200,400,500,1000,1500,2000],
            buttons: [
                {
                    extend: 'collection',
                    className: 'btn btn-outline-secondary dropdown-toggle mr-2 btn-export-access',
                    attr: {
                        'id': 'exportbutton'
                    },
                    text: feather.icons['share'].toSvg({
                        class: 'font-small-4 mr-50'
                    }) + 'Export',
                    buttons: [{
                            extend: 'print',
                            text: feather.icons['printer'].toSvg({
                                class: 'font-small-4 mr-50'
                            }) + 'Print',
                            className: 'dropdown-item',
                            exportOptions: {
                                columns: [1, 2, 3, 4]
                            }
                        },
                        {
                            extend: 'csv',
                            text: feather.icons['file-text'].toSvg({
                                class: 'font-small-4 mr-50'
                            }) + 'Csv',
                            className: 'dropdown-item',
                            exportOptions: {
                                columns: [1, 2, 3, 4]
                            }
                        },
                        {
                            extend: 'excel',
                            text: feather.icons['file'].toSvg({
                                class: 'font-small-4 mr-50'
                            }) + 'Excel',
                            className: 'dropdown-item',
                            exportOptions: {
                                columns: [1, 2, 3, 4]
                            }
                        },
                        {
                            extend: 'pdf',
                            text: feather.icons['clipboard'].toSvg({
                                class: 'font-small-4 mr-50'
                            }) + 'Pdf',
                            className: 'dropdown-item',
                            exportOptions: {
                                columns: [1, 2, 3, 4]
                            }
                        },
                        {
                            extend: 'copy',
                            text: feather.icons['copy'].toSvg({
                                class: 'font-small-4 mr-50'
                            }) + 'Copy',
                            className: 'dropdown-item',
                            exportOptions: {
                                columns: [1, 2, 3, 4]
                            }
                        }
                    ],
                    init: function(api, node, config) {
                        $(node).removeClass('btn-secondary');
                        $(node).parent().removeClass('btn-group');
                        setTimeout(function() {
                            $(node).closest('.dt-buttons').removeClass('btn-group').addClass('d-inline-flex');
                        }, 50);
                    }
                },
                {
                    text: feather.icons['plus'].toSvg({
                        class: 'mr-50 font-small-4'
                    }) + 'Add New Record',
                    className: 'create-new btn btn-primary btn-create-access',
                    attr: {
                        'data-toggle': 'modal',
                        'data-target': '#modals-slide-in',
                        'id': 'btnCreate'
                    },
                    init: function(api, node, config) {
                        $(node).removeClass('btn-secondary');
                    }
                }
            ],
            language: {
                paginate: {
                    // remove previous & next text from pagination
                    previous: '&nbsp;',
                    next: '&nbsp;'
                }
            },
            initComplete: function(){

                if($("#gift_card_denomination_create").length != 1)
                {
                    $("#btnCreate").remove();
                }

                if($("#gift_card_denomination_show").length != 1)
                {
                    $(".view_btn").remove();
                }
                if($("#gift_card_denomination_delete").length != 1)
                {
                    $(".delete_btn").remove();
                }
                if($("#gift_card_denomination_edit").length != 1)
                {
                    $(".edit_btn").remove();
                }
                if($("#gift_card_denomination_export").length != 1)
                {
                    $("#exportbutton").remove();
                }
                $(".search").css('width','100%');
                $("#DataTables_Table_0 tbody").after('<tfoot></tfoot>');
                $("#DataTables_Table_0 thead tr:first").clone().appendTo($("#column-search-datatable tfoot"));
            },
        });
        $('div.head-label').html('<h6 class="mb-0">Gift Card Denomination Listing</h6>');

        $('.dataTable thead').on('input select', '.search', function () {
              let strict = $(this).attr('strict') || false
              let value = strict && this.value ? "^" + this.value + "$" : this.value
              dt_filter_table
                .column($(this).parent().index())
                .search(value, strict)
                .draw()
        });
    }
     $(document).on('click', '.create-new', function(){
        window.location = createUrl;
    });



      // Delete Record
    $('.dt-column-search tbody').on('click', '.delete-record', function(e) {
        // dt_filter_table.row($(this).parents('tr')).remove().draw();
        let id = jQuery(this).data('id');
      Swal.fire(deleteConfirmBox('denomination')).then(function (result) {
            if (result.value) {
              deleteRecord(id);
            } else if (result.dismiss === Swal.DismissReason.cancel) {
              safeRecord('denomination');
            }
        });
    });

    // Delete Record function
    function deleteRecord(id)
    {
         openLoader();
        var formData = {
        };
        var type = "POST";
        var ajaxurl = deleteUrl + '/'+ id;
        $.ajax({
            type: type,
            url: ajaxurl,
            data: formData,
            dataType: 'json',
            success: function(data) {
                closeLoader();
                let res = data.response;
                if(res.status_code == 3028){
                    successModal(res.message, 'Deleted!');
                    $('.modal').modal('hide');
                    dt_filter_table.ajax.reload();
                } else {
                     errorModal('Something went wrong!');
                }
            },
            error: function(data) {
                closeLoader();
                 errorModal('Something went wrong!');
            }
        });
    }

    $(document).on('change', '#checkboxSelectAll, .dt-checkboxes', function(){
        if($('#checkboxSelectAll').prop('checked')) {
            if($('.card-header').find('.btn-more-actions').length == 0 || typeof $('.card-header').find('.btn-more-actions').length === "undefined"){
                dt_filter_table.button().add( 0, {
                    extend: 'collection',
                    className: 'btn btn-outline-secondary dropdown-toggle mr-2 btn-more-actions',
                    text:  'More Actions',
                    buttons: [{
                            text: feather.icons['trash'].toSvg({
                            class: 'font-small-4 mr-50'
                        }) + 'Delete Selected',
                            className: 'dropdown-item delete-selected',
                        },
                    ],
                    init: function(api, node, config) {
                        $(node).removeClass('btn-secondary');
                        $(node).parent().removeClass('btn-group');
                        setTimeout(function() {
                            $(node).closest('.dt-buttons').removeClass('btn-group').addClass('d-inline-flex');
                        }, 50);
                    }
                });
            }

        } else {
            dt_filter_table.buttons( '.btn-more-actions' ).remove();
        }
    });

    $(document).on('click', '.delete-selected', function(){
        Swal.fire(deleteConfirmBox('denomination')).then(function (result) {
            console.log(result.dismiss, Swal.DismissReason.cancel);
            if (result.value) {
                deleteSelectedRecord();
            } else if (result.dismiss === Swal.DismissReason.cancel) {
              safeRecord('all selected denomination');
            }
        });
    });

    // Delete Record function
    function deleteSelectedRecord()
    {
        openLoader();
        let ids = [];
        $('.dt-checkboxes').each(function () {
            if($(this).prop('checked')){
                ids.push($(this).val());
            }
        });
        var formData = {
            ids: ids
        };
        var type = "POST";
        var ajaxurl = destroyUrl;
        $.ajax({
            type: type,
            url: ajaxurl,
            data: formData,
            dataType: 'json',
            success: function(data) {
                closeLoader();
                let res = data.response;
                if(res.status_code == 3028){
                     successModal(res.message, 'Deleted!');
                    $('.modal').modal('hide');
                    dt_filter_table.buttons( '.btn-more-actions' ).remove();
                    dt_filter_table.ajax.reload();
                } else {
                     errorModal('Something went wrong!');
                }
            },
            error: function(data) {
                closeLoader();
                errorModal('Something went wrong!');
            }
        });
    }



});

